// Code generated by goctl. DO NOT EDIT.
// Source: favorite.proto

package favoriteclient

import (
	"context"

	"mini-tiktok/service/favorite/favorite"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CancelLikeRequest        = favorite.CancelLikeRequest
	CommentList              = favorite.CommentList
	GetCommentCountRequest   = favorite.GetCommentCountRequest
	GetCommentCountResponse  = favorite.GetCommentCountResponse
	GetCommentRequest        = favorite.GetCommentRequest
	GetCommentResponse       = favorite.GetCommentResponse
	GetFavoriteCountRequest  = favorite.GetFavoriteCountRequest
	GetFavoriteCountResponse = favorite.GetFavoriteCountResponse
	GiveLikeRequest          = favorite.GiveLikeRequest
	IsFavoriteRequest        = favorite.IsFavoriteRequest
	IsFavoriteResponse       = favorite.IsFavoriteResponse
	LikeListRequest          = favorite.LikeListRequest
	LikeListResponse         = favorite.LikeListResponse
	PostCommentRequest       = favorite.PostCommentRequest
	PostCommentResponse      = favorite.PostCommentResponse
	Response                 = favorite.Response
	User                     = favorite.User

	Favorite interface {
		GiveLike(ctx context.Context, in *GiveLikeRequest, opts ...grpc.CallOption) (*Response, error)
		CancelLike(ctx context.Context, in *CancelLikeRequest, opts ...grpc.CallOption) (*Response, error)
		LikeList(ctx context.Context, in *LikeListRequest, opts ...grpc.CallOption) (*LikeListResponse, error)
		GetCommentList(ctx context.Context, in *GetCommentRequest, opts ...grpc.CallOption) (*GetCommentResponse, error)
		PostComment(ctx context.Context, in *PostCommentRequest, opts ...grpc.CallOption) (*PostCommentResponse, error)
		GetCommentCount(ctx context.Context, in *GetCommentCountRequest, opts ...grpc.CallOption) (*GetCommentCountResponse, error)
		GetFavoriteCount(ctx context.Context, in *GetFavoriteCountRequest, opts ...grpc.CallOption) (*GetFavoriteCountResponse, error)
		IsFavorite(ctx context.Context, in *IsFavoriteRequest, opts ...grpc.CallOption) (*IsFavoriteResponse, error)
	}

	defaultFavorite struct {
		cli zrpc.Client
	}
)

func NewFavorite(cli zrpc.Client) Favorite {
	return &defaultFavorite{
		cli: cli,
	}
}

func (m *defaultFavorite) GiveLike(ctx context.Context, in *GiveLikeRequest, opts ...grpc.CallOption) (*Response, error) {
	client := favorite.NewFavoriteClient(m.cli.Conn())
	return client.GiveLike(ctx, in, opts...)
}

func (m *defaultFavorite) CancelLike(ctx context.Context, in *CancelLikeRequest, opts ...grpc.CallOption) (*Response, error) {
	client := favorite.NewFavoriteClient(m.cli.Conn())
	return client.CancelLike(ctx, in, opts...)
}

func (m *defaultFavorite) LikeList(ctx context.Context, in *LikeListRequest, opts ...grpc.CallOption) (*LikeListResponse, error) {
	client := favorite.NewFavoriteClient(m.cli.Conn())
	return client.LikeList(ctx, in, opts...)
}

func (m *defaultFavorite) GetCommentList(ctx context.Context, in *GetCommentRequest, opts ...grpc.CallOption) (*GetCommentResponse, error) {
	client := favorite.NewFavoriteClient(m.cli.Conn())
	return client.GetCommentList(ctx, in, opts...)
}

func (m *defaultFavorite) PostComment(ctx context.Context, in *PostCommentRequest, opts ...grpc.CallOption) (*PostCommentResponse, error) {
	client := favorite.NewFavoriteClient(m.cli.Conn())
	return client.PostComment(ctx, in, opts...)
}

func (m *defaultFavorite) GetCommentCount(ctx context.Context, in *GetCommentCountRequest, opts ...grpc.CallOption) (*GetCommentCountResponse, error) {
	client := favorite.NewFavoriteClient(m.cli.Conn())
	return client.GetCommentCount(ctx, in, opts...)
}

func (m *defaultFavorite) GetFavoriteCount(ctx context.Context, in *GetFavoriteCountRequest, opts ...grpc.CallOption) (*GetFavoriteCountResponse, error) {
	client := favorite.NewFavoriteClient(m.cli.Conn())
	return client.GetFavoriteCount(ctx, in, opts...)
}

func (m *defaultFavorite) IsFavorite(ctx context.Context, in *IsFavoriteRequest, opts ...grpc.CallOption) (*IsFavoriteResponse, error) {
	client := favorite.NewFavoriteClient(m.cli.Conn())
	return client.IsFavorite(ctx, in, opts...)
}
