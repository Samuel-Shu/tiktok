service core-api {
	@handler UserRegister
	post /douyin/user/register (UserRegisterRequest) returns (UserRegisterResponse)
	
	@handler UserLogin
	post /douyin/user/login (UserLoginRequest) returns (UserLoginResponse)
	
	@handler UserInfo
	get /douyin/user (UserInfoRequest) returns (UserInfoResponse)
	
	@handler VideoList
	get /douyin/publish/list () returns (VideoListResponse)
}

type VideoListResponse {
	StatusCode int            `json:"status_code"`
	VideoList  []VideoListRes `json:"video_list"`
}

type VideoListRes {
	ID       int       `json:"id"`
	Author   AuthorRes `json:"author"`
	PlayURL  string    `json:"play_url"`
	CoverURL string    `json:"cover_url"`
}

type AuthorRes {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

type UserInfoRequest {
	Token string `form:"token"`
}

type UserInfoResponse {
	StatusCode int      `json:"status_code"`
	StatusMsg  string   `json:"status_msg"`
	User       UserInfo `json:"user"`
}

type UserInfo {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

type UserLoginRequest {
	Username string `form:"username"`
	Password string `form:"password"`
}

type UserLoginResponse {
	StatusCode int    `json:"status_code"`
	UserId     int    `json:"user_id"`
	Token      string `json:"token"`
	StatusMsg  string `json:"status_msg"`
}

type UserRegisterRequest {
	Username string `form:"username"`
	Password string `form:"password"`
}

type UserRegisterResponse {
	StatusCode int    `json:"status_code"`
	UserId     int    `json:"user_id"`
	Token      string `json:"token"`
	StatusMsg  string `json:"status_msg"`
}

//@server (
//	middleware :Auth
//)
//service core-api {
//
//
//}